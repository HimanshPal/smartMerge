syntax = "proto3";

package proto;

service Register {
	rpc ReadS(ReadRequest) returns (ReadReply) {} 
	rpc WriteS(WriteRequest) returns (WriteReply) {}
	rpc ReadN(ReadNRequest) returns (ReadNReply) {}
	rpc WriteN(WriteNRequest) returns (WriteNReply) {}
	rpc SetCur(NewCur) returns (NewCurReply) {}
}

service AdvRegister {
	rpc AReadS(AdvRead) returns (AdvReadReply) {} 
	rpc AWriteS(AdvWriteS) returns (AdvWriteSReply) {}
	rpc AWriteN(AdvWriteN) returns (AdvWriteNReply) {}
	rpc SetCur(NewCur) returns (NewCurReply) {}
	rpc LAProp(LAProposal) returns (LAReply) {} 
	rpc SetState(NewState) returns (NewStateReply) {}
}


message State {
	bytes Value = 1;
	int32 Timestamp = 2;
	uint32 Writer = 3;
}

message Blueprint {
	repeated uint32 Add = 1;
	repeated uint32 Rem = 2;
} 

message ReadReply {
	State State = 1;
	Blueprint Cur = 2;
}

message WriteReply {
	Blueprint Cur = 1;
}

message ReadRequest {
	uint32 CurC = 1;	
}

message WriteRequest {
	State State = 1;
	uint32 CurC = 2;
}

message WriteNRequest {
	uint32 CurC = 1;
	Blueprint Next = 2;
}

message ReadNRequest {
	uint32 CurC = 1;
}	
	
message WriteNReply {
	Blueprint Cur = 1;
}


message ReadNReply {
	Blueprint Cur = 1;
	repeated Blueprint Next = 2;
}

message NewCur {
	Blueprint Cur = 1;
	uint32 CurC = 2;
}

message NewCurReply {
	bool New = 1;
}

message AdvRead {
	uint32 CurC = 1;
}

message AdvReadReply {
	State State = 1;
	Blueprint Cur = 2;
	repeated Blueprint Next = 3;
}

message AdvWriteS {
	State State = 1;
	uint32 CurC = 2;
}

message AdvWriteSReply {
	Blueprint Cur = 1;
	repeated Blueprint Next = 2;
}

message AdvWriteN {
	uint32 CurC = 1;
	Blueprint Next = 2;
}

message AdvWriteNReply {
	Blueprint Cur = 1;
	State State = 2;
	repeated Blueprint Next = 3;
	Blueprint LAState = 4;
}

message LAProposal {
	uint32 CurC = 1;
	Blueprint Prop = 2;
}

message LAReply {
	Blueprint Cur = 1;
	Blueprint LAState = 2;
	repeated Blueprint Next = 3;
}

message NewState {
	uint32 CurC = 1;
	Blueprint Cur = 2;
	State State = 3;
	Blueprint LAState = 4;
}

message NewStateReply {
	Blueprint Cur = 1;
}

service DynaDisk {
	rpc DReadS(AdvRead) returns (AdvReadReply) {} 
	rpc DWriteS(AdvWriteS) returns (AdvWriteSReply) {}
	rpc DWriteNSet(DWriteN) returns (DWriteNReply) {}
	rpc GetOneN(GetOne) returns (GetOneReply) {}
	rpc DSetCur(NewCur) returns (NewCurReply) {}
}

message DWriteN {
	uint32 CurC = 1;
	repeated Blueprint Next = 2;
}

message DWriteNReply {
	Blueprint Cur = 1;
}

message GetOne {
	uint32 CurC = 1;
	Blueprint Next = 2;
}

message GetOneReply {
	Blueprint Next = 1;
	Blueprint Cur = 2;
}


